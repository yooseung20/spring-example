//build할 때 사용할 plugin dependencies 추가
//프로젝트의 플러그인 의존성 관리
buildscript {
    ext { //전역변수
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 추가한 plugin과 사용할 plugin들을 apply
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.zoey'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') // compile x
    implementation('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    // spring boot 용 spring data jpa 추상화 라이브러리
    // JPA관련 라이브러리들의 버전을 관리한다.
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    // 인메모리 관계형 데이베이스
    // 메모리에서 실행되기 때문에 애플리케이션을 재 시작할 때마다 초기화 된다.
    // 테스트 용도로 사용됨
    // JPA 테스트, 로컬환경에서의 구동에서 사용 예정
    implementation('com.h2database:h2')

    // error: variable <변수명> not initialized in the default constructor
    testImplementation ('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // 머스테치 : 스프링 부트에서 공식 지원하는 템플릿 엔진
    implementation('org.springframework.boot:spring-boot-starter-mustache')
}

test {
    testLogging {
        // test jvm의 standard out and standard error을 console에 출력한다.
        showStandardStreams = true
        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

